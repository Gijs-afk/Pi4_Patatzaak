@model Order

@using (Html.BeginForm("Create", "Orders", FormMethod.Post))
{
    @Html.HiddenFor(model => model.CustomerID)
    @Html.HiddenFor(model => model.Status)

    <h4>Select Products:</h4>
    <table class="table">
        <thead>
            <tr>
                <th>Product</th>
                <th>Price</th>
                <th>Quantity</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>
                    @Html.DropDownList("ProductID", (SelectList)ViewBag.ProductList, "Select a product")
                </td>
                <td>
                    <input type="text" id="Price" name="Price" readonly />
                </td>
                <td>
                    <input type="number" id="Amount" name="Amount" />
                    <button type="button" id="addOrderLine">Add Order Line</button>
                </td>
            </tr>
        </tbody>
    </table>

    <div id="orderLines">
        <!-- Dynamic order lines will be added here -->
    </div>

    <input type="submit" value="Place Order" />
}

<div id="templateOrderLine" style="display: none;">
    <table>
        <tr>
            <td>
                @Html.DropDownList("ProductID", (SelectList)ViewBag.ProductList, "Select a product")
            </td>
            <td>
                <input type="text" id="Price" name="Price" readonly />
            </td>
            <td>
                <input type="number" id="Amount" name="Amount" />
            </td>
        </tr>
    </table>
</div>


<script>
    $(document).ready(function () {
        // Initialize a counter for dynamically added order lines
        var orderLineCount = 0;
        var products = @Html.Raw(ViewData["Products"]);

        // Handle the "Add Order Line" button click
        $("#addOrderLine").click(function () {
            // Clone the template row and update element IDs and names
            var newOrderLine = $("#templateOrderLine").clone();
            newOrderLine.find("#ProductID").attr("id", "Orderlines_" + orderLineCount + "__ProductID");
            newOrderLine.find("#Amount").attr("id", "Orderlines_" + orderLineCount + "__Amount");
            newOrderLine.find("#Price").attr("id", "Orderlines_" + orderLineCount + "__ActualPrice");

            // Append the new order line to the orderLines div
            $("#orderLines").append(newOrderLine);

            orderLineCount++;
        });

        // Update the price when a product is selected
        $("#ProductID").change(function () {
            var selectedProductId = $(this).val();
            var selectedProduct = products.find(p => p.ProductID == parseInt(selectedProductId));
            var priceInput = $("#Price");

            if (selectedProduct) {
                // Set the price to the product's price
                priceInput.val(selectedProduct.Price);
            } else {
                // Reset the price to 0 if the product is not found
                priceInput.val(0);
            }
        });
    });
</script>



